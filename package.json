{
  "name": "zeppelin-vscode",
  "displayName": "Zeppelin Notebook",
  "description": "Apache Zeppelin Notebook Extension for VS Code",
  "version": "0.1.7",
  "publisher": "AllenLi1231",
  "author": {
    "name": "Allen Li"
  },
  "license": "MIT",
  "repository": {
    "url": "https://github.com/allen-li1231/zeppelin-vscode"
  },
  "icon": "zeppelin.png",
  "engines": {
    "vscode": "^1.79.0"
  },
  "main": "./dist/extension.js",
  "keywords": [
    "Apache Zeppelin",
    "zeppelin",
    "notebook",
    "elasticsearch",
    "hive",
    "java",
    "neo4j",
    "python",
    "r",
    "scala",
    "spark",
    "sql"
  ],
  "categories": [
    "Data Science",
    "Machine Learning",
    "Notebooks",
    "Visualization"
  ],
  "activationEvents": [
    "onLanguage:alluxio",
    "onLanguage:beam",
    "onLanguage:bigquery",
    "onLanguage:cassandra",
    "onLanguage:elasticsearch",
    "onLanguage:flink",
    "onLanguage:geode",
    "onLanguage:groovy",
    "onLanguage:hazelcastjet",
    "onLanguage:hbase",
    "onLanguage:hive",
    "onLanguage:ignite",
    "onLanguage:influxdb",
    "onLanguage:java",
    "onLanguage:kotlin",
    "onLanguage:kylin",
    "onLanguage:hahout",
    "onLanguage:markdown",
    "onLanguage:neo4j",
    "onLanguage:pig",
    "onLanguage:python",
    "onLanguage:sap",
    "onLanguage:scala",
    "onLanguage:scalding",
    "onLanguage:scio",
    "onLanguage:shell",
    "onLanguage:sql",
    "onLanguage:spark",
    "onLanguage:sparql",
    "onNotebook:zeppelin-notebook"
  ],
  "contributes": {
    "notebooks": [
      {
        "id": "zeppelin-notebook",
        "type": "zeppelin-notebook",
        "displayName": "Zeppelin Notebook",
        "selector": [
          {
            "filenamePattern": "{*.zpln}"
          }
        ]
      }
    ],
    "configuration": {
      "title": "Zeppelin",
      "properties": {
        "zeppelin.alwaysConnectToTheLastServer": {
          "order": 0,
          "type": [
            "string"
          ],
          "default": "Yes",
          "enum": [
            "Yes",
            "No",
            "Never"
          ],
          "description": "Specify whether to always try connecting to last used Zeppelin server."
        },
        "zeppelin.autosave.syncActiveNotebook": {
          "order": 1,
          "type": "boolean",
          "default": true,
          "description": "Specify whether to sync notebook with Zeppelin server when active notebook is changed."
        },
        "zeppelin.autosave.throttleTime": {
          "order": 2,
          "type": "number",
          "default": 1,
          "description": "Set paragraph update delay time (in seconds). Avoid too fast changes of cells causing response pressure on Zeppelin server."
        },
        "zeppelin.autosave.poolingInterval": {
          "order": 3,
          "type": "number",
          "default": 1,
          "description": "Set minimum save interval (in seconds) to Zeppelin server."
        },
        "zeppelin.execution.concurrency": {
          "order": 4,
          "type": "string",
          "default": "parallel",
          "enum": ["parallel", "sequential"],
          "enumDescriptions": [
            "Run muliple cells simultaneously",
            "Execute in order, new execution will be blocked before previous execution is finished"],
          "description": "Set cell execution concurrency."
        },
        "zeppelin.execution.trackInterval": {
          "order":  5,
          "type": "number",
          "default": 1,
          "description": "Set minimum interval (in seconds) to track execution."
        },
        "zeppelin.proxy.host": {
          "order": 6,
          "type": [
            "string"
          ],
          "format": "uri",
          "default": null,
          "description": "Set proxy host for connection with Zeppelin server."
        },
        "zeppelin.proxy.port": {
          "order": 7,
          "type": [
            "integer"
          ],
          "default": null,
          "description": "Set proxy port for connection with Zeppelin server."
        },
        "zeppelin.proxy.credential.username": {
          "order": 8,
          "type": [
            "string"
          ],
          "default": null,
          "description": "Specifies proxy authentication for connection with Zeppelin server."
        },
        "zeppelin.proxy.credential.password": {
          "order": 9,
          "type": [
            "string"
          ],
          "default": null,
          "description": "Specifies proxy authentication for connection with Zeppelin server."
        },
        "zeppelin.proxy.credential.protocol": {
          "order": 10,
          "type": [
            "string"
          ],
          "default": null,
          "description": "Specifies the proxy protocol for connection with Zeppelin server."
        }
      }
    },
    "commands": [
      {
        "command": "zeppelin-vscode.importCurrentNotebook",
        "title": "Zeppelin: Import Current Notebook to Zeppelin Server",
        "enablement": "resourceExtname == .zpln || resourceExtname == .ipynb"
      },
      {
        "command": "zeppelin-vscode.setZeppelinServerURL",
        "title": "Zeppelin: Set Zeppelin Server URL"
      },
      {
        "command": "zeppelin-vscode.setZeppelinCredential",
        "title": "Zeppelin: Set Zeppelin Credential (username and password)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "zeppelin-vscode.importCurrentNotebook",
          "when": "resourceExtname == .zpln || resourceExtname == .ipynb"
        },
        {
          "command": "zeppelin-vscode.setZeppelinServerURL"
        },
        {
          "command": "zeppelin-vscode.setZeppelinCredential"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/lodash": "^4.14.198",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.79.0",
    "@types/vscode-notebook-renderer": "^1.72",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "axios": "^1.4.0",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "lodash": "^4.17.21",
    "ts-loader": "^9.4.4",
    "typescript": "^5.0.4",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  }
}
