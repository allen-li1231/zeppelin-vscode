{
  "name": "vscode-zeppelin",
  "displayName": "vscode-zeppelin",
  "description": "Zeppelin Notebook Extension for VS Code",
  "version": "0.1.0",
  "publisher": "AllenLi1231",
  "author": {
    "name": "Allen Li"
  },
  "license": "MIT",
  "repository": {
    "url": "https://github.com/allen-li1231/zeppelin-vscode"
  },
  "icon": "zeppelin-notebook.ico",
  "engines": {
    "vscode": "^1.75.0"
  },
  "main": "./dist/extension.js",
  "keywords": [
    "notebookKernelZeppelin",
    "zeppelin",
    "notebook",
    "python",
    "scala"
  ],
  "categories": [
    "Data Science",
    "Machine Learning",
    "Notebooks",
    "Visualization"
  ],
  "activationEvents": [
    "onLanguage:python",
    "onLanguage:scala",
    "onLanguage:sql",
    "onLanguage:r",
    "onNotebook:zeppelin-notebook"
  ],
  "contributes": {
    "notebooks": [
      {
        "id": "zeppelin-notebook",
        "type": "zeppelin-notebook",
        "displayName": "Zeppelin Notebook",
        "selector": [
          {
            "filenamePattern": "{*.zpln}"
          }
        ]
      }
    ],
    "configuration": {
      "title": "Zeppelin",
      "properties": {
        "zeppelin.autosave.throttleTime": {
          "type": "integer",
          "default": 5,
          "description": "Set paragraph update delay time (in seconds). Avoid too fast changes of cells causing response pressure on Zeppelin server."
        },
        "zeppelin.autosave.poolingInterval": {
          "type": "integer",
          "default": 1,
          "description": "Set minimum save interval (in seconds) to Zeppelin server."
        },
        "zeppelin.alwaysConnectLastServer": {
          "type": ["string", "null"],
          "default": null,
          "enum": ["Yes", "No", "Never"],
          "description": "Specify whether to always try connecting to last used Zeppelin server and unlocking notebook subsequently."
        },
        "zeppelin.proxy.host": {
          "type": ["string", "null"],
          "format": "uri",
          "default": null,
          "description": "Set proxy host for connection with Zeppelin server."
        },
        "zeppelin.proxy.port": {
          "type": ["integer", "null"],
          "default": null,
          "description": "Set proxy port for connection with Zeppelin server."
        },
        "zeppelin.proxy.username": {
          "type": ["string", "null"],
          "default": null,
          "description": "Specifies proxy authentication for connection with Zeppelin server."
        },
        "zeppelin.proxy.password": {
          "type": ["string", "null"],
          "default": null,
          "description": "Specifies proxy authentication for connection with Zeppelin server."
        },
        "zeppelin.proxy.protocol": {
          "type": ["string", "null"],
          "default": null,
          "description": "Specifies the proxy protocol for connection with Zeppelin server."
        }
      }
    },
    "commands": [
      {
        "command": "vscode-zeppelin.importCurrentNotebook",
        "title": "Zeppelin: Import Current Notebook to Zeppelin Server"
      },
      {
        "command": "vscode-zeppelin.setZeppelinServerURL",
        "title": "Zeppelin: Set Zeppelin Server URL"
      },
      {
        "command": "vscode-zeppelin.setZeppelinCredential",
        "title": "Zeppelin: Set Zeppelin Credential (username and password)"
      },
      {
        "command": "vscode-zeppelin.unlockCurrentNotebook",
        "title": "Zeppelin: Unlock Current Notebook by Connecting to Server"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-zeppelin.importCurrentNotebook",
          "when": "!activeEditorIsReadonly && (resourceExtname == .zpln || resourceExtname == .ipynb)"
        },
        {
          "command": "vscode-zeppelin.setZeppelinServerURL"
        },
        {
          "command": "vscode-zeppelin.setZeppelinCredential"
        },
        {
          "command": "vscode-zeppelin.unlockCurrentNotebook",
          "when": "resourceExtname == .zpln && activeEditorIsReadonly"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/lodash": "^4.14.195",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.75.0",
    "@types/vscode-notebook-renderer": "^1.72",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "axios": "^1.4.0",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "ts-loader": "^9.4.2",
    "typescript": "^5.0.4",
    "webpack": "^5.81.0",
    "webpack-cli": "^5.0.2"
  }
}
